
 @using Entities.Entidades_Definicion;
 @using BusinessLogic.Definition;
 @using AppLayer; 


@foreach (var position in segmentPositions )
{
    Random rnd = new Random();
    if (position.CompositeDataElement != null)
    {
        <DxTreeViewNode Name="@(string.Format("{0}", rnd.Next(0, 100000).ToString()))" Expanded="false" style="background-color: lightblue">
            <Template>
                <table class="table" style="margin:0px">
                    <tbody>
                        <tr>
                            <td width="20" style="border-right: 1px solid black;border-left: 1px solid black">
                                <small class="@GetNodeExpandButtonCssClass(context.Name)"></small>
                            </td>
                            <td width="400" style="border-right: 1px solid black;border-left: 1px solid black">
                                <span>
                                    <strong>Composición @position.CompositeDataElement.Code - @position.CompositeDataElement.Name</strong>
                                </span>
                            </td>
                            <td style="border-left: 1px solid black">
                                <span>

                                </span>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </Template>
            <Nodes>
                @foreach (var componente in position.CompositeDataElement.DataElements)
                {
                    <DxTreeViewNode Name="@(string.Format("{0}", rnd.Next(0, 100000).ToString()))" style="background-color: rgb(255, 204, 204);border-bottom:1px solid black">
                        <Template>
                            <table class="table" style="margin:0px">
                                <tbody>
                                    <tr>
                                        <td width="400" style="border-right: 1px solid black;border-left: 1px solid black">
                                            <span>
                                                <strong>@componente.Code - @componente.Name</strong>
                                            </span>
                                        </td>
                                        <td width="600" style="border-right: 1px solid black;border-left: 1px solid black">@componente.Description</td>
                                        <td width="100" style="border-right: 1px solid black;border-left: 1px solid black">
                                            <span>

                                            </span>
                                        </td>
                                        <td width="80" style="@string.Format("{0}border-left: 1px solid black", componente.CodeLists!=null ? "border-right: 1px solid black;":"")">@componente.ValueFormat</td>
                                        <td width="80">
                                            @if (componente.CodeLists != null)
                                            {
                                                <div class="d-flex justify-content-center">

                                                    @*<DxButton Context="contexto" Click="@(()=>(componente.CodeLists))" RenderStyle="ButtonRenderStyle.Primary"><img src="images/iconos/view.svg" width="20" /></DxButton>*@
                                                </div>
                                            }
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </Template>
                    </DxTreeViewNode>
                }
            </Nodes>
        </DxTreeViewNode>
    }
    else
    {
        <DxTreeViewNode Name="@(string.Format("{0}", rnd.Next(0, 100000).ToString()))" style="background-color: rgb(255, 204, 204);border-bottom:1px solid black">
            <Template>
                <table class="table" style="margin:0px">
                    <tbody>
                        <tr>
                            <td width="300" style="border-right: 1px solid black;border-left: 1px solid black">
                                <span>
                                    <strong>@position.DataElement.Code - @position.DataElement.Name</strong>
                                </span>
                            </td>
                            <td width="200" style="border-right: 1px solid black;border-left: 1px solid black">
                                <span>
                                    @*@Global.EsObligatorio(position.DataElement.obligatory)*@
                                </span>
                            </td>
                            <td width="80" style="@string.Format("{0}border-left: 1px solid black", position.DataElement.CodeLists!=null ? "border-right: 1px solid black;":"")">@position.DataElement.ValueFormat</td>
                            <td width="80">
                                @if (position.DataElement.CodeLists != null)
                                {
                                    <div class="d-flex justify-content-center">
                                        @*  <DxButton Context="contexto" Click="@(()=>MostrarCodeList(position.DataElement.CodeLists))" RenderStyle="ButtonRenderStyle.Primary"><img src="images/iconos/view.svg" width="20" /></DxButton>*@
                                    </div>
                                }
                            </td>
                        </tr>
                    </tbody>
                </table>
            </Template>
        </DxTreeViewNode>

    }
}

@code {
    [Parameter]
     public required DxTreeView TreeView { get; set; }

    string GetNodeExpandButtonCssClass(string nodeName)
    {
        return String.Format("oi oi-chevron-{0}", TreeView.GetNodeExpanded(n => n.Name == nodeName) ? "bottom" : "right");
    }

    [Parameter]
    public List<SegmentPosition> segmentPositions { get; set; }


}
