@rendermode InteractiveServer
@using AppLayer
@inject NavigationManager Navigation
@using Entities.Model.Enum
@page "/"


<form>
    <div class="mb-3">
        <label for="messageType" class="form-label">Message Type</label>
        <select class="form-select" id="messageType" @bind="messageTypeValue">
            @foreach (var type in Enum.GetValues(typeof(MessageTypeEnum)))
            {
                <option value="@type">@type</option>
            }
        </select>
    </div>
    <div class="mb-3">
        <label for="messageVersion" class="form-label">Message Version</label>
        <input type="text" class="form-control" id="messageVersion" @bind="messageVersionValue" placeholder="Enter message version">
    </div>
    <div class="mb-3">
        <label for="messageRelease" class="form-label">Message Release</label>
        <input type="text" class="form-control" id="messageRelease" @bind="messageReleaseValue" placeholder="Enter message release">
    </div>
    <div class="mb-3">
        <label for="messageDirectoryVersion" class="form-label">Message Directory Version</label>
        <input type="text" class="form-control" id="messageDirectoryVersion" @bind="messageDirectoryVersionValue" placeholder="Enter directory version">
    </div>
    <button type="button" id="btn-submit" @onclick="CreateMessage">Crear Mensaje</button>
</form>

@code {
    public List<Message> _messageList;



    private string messageTypeValue;
    private string messageVersionValue;
    private string messageReleaseValue;
    private string messageDirectoryVersionValue;

    private void CreateMessage()
    {
        if (string.IsNullOrEmpty(messageTypeValue))
        {
            // Handle the error (e.g., show a validation message)
            return;
        }
        Message message = new Message
            {

                MessageType = Enum.Parse<MessageTypeEnum>(messageTypeValue),
                MessageVersion = messageVersionValue,
                MessageRelease = messageReleaseValue,
                MessageDirectoryVersion = messageDirectoryVersionValue,
                MessageName = "Nuevo Mensaje",
                MessageDescription = "Descripción del mensaje"
            };
        
        // Agregar el mensaje a la lista
        Message.MessagesList.Add(message);
        // Navegar a la pantalla de lista de mensajes
        Navigation.NavigateTo("/MessagesList");
    }


 

}
