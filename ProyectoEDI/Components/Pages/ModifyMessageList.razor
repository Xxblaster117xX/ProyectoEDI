@page "/ModifyMessageList/{MessageId:int}"
@using Entities.Entidades_Definicion
@inject NavigationManager Navigation
@rendermode InteractiveServer
@using Entities.Model.Enum
@using BusinessLogic.Definition
@inject MessageManager messageManager

<h3>Modificar Mensaje</h3>

<!-- Si no almacena ningún mensaje aparece que los está cargando-->
@if (message == null)
{
    <p>Los mensajes no han podido ser cargados </p>
}
else
{
    <!--Formulario de modificación de un mensaje -->
    <EditForm Model="message" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="messageType" class="form-label fw-bold">Tipo de Mensaje</label>
            <InputSelect class="form-control" @bind-Value="message.MessageType">
                @foreach (var type in Enum.GetValues(typeof(MessageTypeEnum)))
                {
                    <option value="@type">@type</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="messageName" class="form-label fw-bold">Nombre</label>
            <InputText class="form-control" @bind-Value="message.Name" required />
        </div>
        <div class="form-group">
            <label for="messageVersion" class="form-label fw-bold">Versión</label>
            <InputText class="form-control" @bind-Value="message.Version" required />
        </div>
        <div class="form-group">
            <label for="messageRelease" class="form-label fw-bold">Release</label>
            <InputText class="form-control" @bind-Value="message.Release" required />
        </div>
        <div class="form-group">
            <label for="messageDirectoryVersion" class="form-label fw-bold">Versión del Directorio</label>
            <InputText class="form-control" @bind-Value="message.DirectoryVersion" required />
        </div>
        <div class="form-group">
            <label for="messageDescription" class="form-label fw-bold">Descripción</label>
            <InputTextArea class="form-control" @bind-Value="message.Description" required />
        </div>
        <br />
        <button type="submit" class="btn btn-success" style="background-color:red">Guardar Cambios</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancelar</button>
    </EditForm>
}
<!-- Pop up de confirmación de modificación del mensaje -->
@if (showSuccessPopup)
{
    <div class="overlay">
        <div class="popUpConfirmation">
            <h4>Modificación Exitosa</h4>
            <p>El mensaje se ha modificado correctamente. ¿Desea volver a la lista?</p>
            <div class="popup-buttons">
                <button class="btn btn-success" @onclick="GoToList">Sí</button>
                <button class="btn btn-secondary" @onclick="StayHere">No</button>
            </div>
        </div>
    </div>
}

@code {
    /// <summary>
    /// Variable para almacenar el mensaje a modificar.
    /// </summary>
    [Parameter] public int MessageId { get; set; }
    /// <summary>
    /// Variable para instanciar un mensaje
    /// </summary>
    private Message message;
    /// <summary>
    /// Variable para manejar el pop up de confirmación
    /// </summary>
    private bool showSuccessPopup = false;

    /// <summary>
    /// Cargar el mensaje por su ID al inicializar la página.
    /// </summary>
    protected override void OnInitialized()
    {
        Console.WriteLine($"Cargando mensaje con ID {MessageId}");
        message = messageManager.GetMessageById(MessageId);
        if (message == null)
        {
            Console.WriteLine($"No se encontró el mensaje con ID {MessageId}");
        }
        else
        {
            Console.WriteLine($"Mensaje cargado: {message.Name}");
        }
    }

    /// <summary>
    /// Guardar los cambios realizados en el mensaje.
    /// </summary>
    private void HandleValidSubmit()
    {
        messageManager.UpdateMessage(message);
        showSuccessPopup = true;
    }

    /// <summary>
    /// Redirigir a la lista de mensajes.
    /// </summary>
    private void GoToList()
    {
        showSuccessPopup = false;
        Navigation.NavigateTo("/MessagesList?success=modified");
    }

    /// <summary>
    /// Permanecer en la página actual.
    /// </summary>
    private void StayHere()
    {
        showSuccessPopup = false;
    }

    /// <summary>
    /// Cancelar la edición y volver a la lista de mensajes.
    /// </summary>
    private void Cancel()
    {
        Navigation.NavigateTo("/MessagesList");
    }
}
