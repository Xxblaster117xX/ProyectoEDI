@page "/crear-segmento"
@using ProyectoEDI.Components.Services
@using Entities.Entidades_Representacion.Abstract
@using Entities.Entidades_Representacion.Segments
@using Entities.Enum
@inject SegmentService SegmentService

<PageTitle>Crear Segmento</PageTitle>

<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="card p-4" style="width: 30rem;">
        <h2 class="text-center mb-4">Crear Segmento</h2>

        <form @onsubmit="CrearSegment">
            <!-- Selección del tipo de segmento -->
            <div class="mb-3">
                <label for="tipo" class="form-label">Tipo de Segmento</label>
                <select class="form-select" id="tipo" @onchange="OnSegmentTypeChanged">
                    <option value="" disabled selected>Seleccione un tipo...</option>
                    @foreach (var tipo in Enum.GetValues(typeof(SegmentTypeEnum)))
                    {
                        <option value="@tipo">@tipo</option>
                    }
                </select>
            </div>

            <!-- Campos comunes a todos los segmentos -->
            @if (segmento != null)
            {
                <div class="mb-3">
                    <label for="codigo" class="form-label">Código:</label>
                    <input type="number" class="form-control" id="codigo" @bind="segmento.SegmentCode">
                </div>

                <div class="mb-3">
                    <label for="nombre" class="form-label">Nombre:</label>
                    <input type="text" class="form-control" id="nombre" @bind="segmento.SegmentName">
                </div>

                <div class="mb-3">
                    <label for="descripcion" class="form-label">Descripción:</label>
                    <textarea class="form-control" id="descripcion" rows="3" @bind="segmento.SegmentDescription"></textarea>
                </div>

                <div class="form-check mb-3">
                    <input type="checkbox" class="form-check-input" id="obligatorio" @bind="segmento.Obligatory">
                    <label class="form-check-label" for="obligatorio">Obligatorio</label>
                </div>

                <!-- Campos específicos según el tipo de segmento -->
                @if (segmento is DtmSegment dtmSegment)
                {
                    <div class="mb-3">
                        <label for="dateQualifier" class="form-label">Date Time Qualifier:</label>
                        <input type="text" class="form-control" id="dateQualifier" @bind="dtmSegment.DateQualifier">
                    </div>
                    <div class="mb-3">
                        <label for="dateTimePeriod" class="form-label">Date Time Period:</label>
                        <input type="text" class="form-control" id="dateTimePeriod" @bind="dtmSegment.DateTimePeriod">
                    </div>
                }

                else if (segmento is UnhSegment unhSegment)
                {
                    <div class="mb-3">
                        <label for="ReferenceNumber" class="form-label">Message Reference Number:</label>
                        <input type="text" class="form-control" id="ReferenceNumber" @bind="unhSegment.ReferenceNumber">
                    </div>
                }
            }

            <!-- Botón de envío -->
            <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-danger w-50" disabled="@(segmento == null)">Enviar</button>
            </div>
        </form>
    </div>
</div>

@code {
    private SegmentTypeEnum tipoSegmento;
    private SegmentRepresentation segmento;

    private void OnSegmentTypeChanged(ChangeEventArgs e)
    {
        if (Enum.TryParse<SegmentTypeEnum>(e.Value.ToString(), out var segmentType))
        {
            tipoSegmento = segmentType;

            // Crear una instancia del segmento dinámicamente
            var segmentTypeName = $"Entities.Entidades_Representacion.Segments.{segmentType}Segment";
            var type = Type.GetType(segmentTypeName);
            if (type != null)
            {
               segmento  = (SegmentRepresentation)Activator.CreateInstance(type);
            }
            else
            {
                Console.WriteLine($"No se pudo encontrar el tipo: {segmentTypeName}");
            }
        }
    }

    private void CrearSegment()
    {
        if (segmento != null)
        {
            // Guardar el segmento en el servicio
            SegmentService.AddSegment(segmento);

            // Reiniciar el formulario
            segmento = null;
            tipoSegmento = default;
        }
    }
}
