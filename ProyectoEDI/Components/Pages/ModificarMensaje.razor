@page "/modificar-mensaje/{id:int}"
@using Entities.Entidades_Definicion
@using Entities.Model.Enum
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Modificar mensaje</PageTitle>

<div class="container d-flex justify-content-center align-items-center vh-100" style="margin-top:-100px">
    <div class="card p-4" style="width: 30rem;">
        <h2>Modificar Lista de Códigos</h2>
        <EditForm Model="Mensaje" OnValidSubmit="Modificarmensaje">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="tipo" class="form-label">Tipo de Mensaje</label>
                <InputSelect @bind-Value="Mensaje.MessageType" class="form-select">
                    <option value="" disabled selected>Seleccione un tipo...</option>
                    @foreach (var tipo in Enum.GetValues(typeof(TipoDocumento)))
                    {
                        <option value="@tipo">@tipo</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => Mensaje.MessageType)" />
                <!--
                <select class="form-select" id="tipo" @bind = "Mensaje.MessageType">
                <option value="" disabled selected>Seleccione un tipo...</option>
                @foreach (var tipo in Enum.GetValues(typeof(MessageTypeEnum)))
                {
                <option value="@tipo">@tipo</option>
                }
                </select>
                -->
            </div>

            <div class="mb-3">
                <label for="version" class="form-label">Versión:</label>
                <InputText type="text" class="form-control" id="version" name="version" @bind-value="Mensaje.Version" />
                <ValidationMessage For="@(() => Mensaje.Version)" />

            </div>

            <div class="mb-3">
                <label for="release" class="form-label">Release:</label>
                <InputText type="text" class="form-control" id="release" name="release" @bind-value="Mensaje.Release" />
                <ValidationMessage For="@(() => Mensaje.Release)" />
            </div>

            <div class="mb-3">
                <label for="directoryVersion" class="form-label">Directory:</label>
                <InputText type="text" class="form-control" id="directoryVersion" name="directoryVersion" @bind-value="Mensaje.DirectoryVersion" />
                <ValidationMessage For="@(() => Mensaje.Directory)" />
            </div>

            <div class="mb-3">
                <label for="directoryVersion" class="form-label">Directory Version:</label>
                <InputText type="text" class="form-control" id="directoryVersion" name="directoryVersion" @bind-value="Mensaje.DirectoryVersion" />
                <ValidationMessage For="@(() => Mensaje.DirectoryVersion)" />
            </div>

            <div class="mb-3">
                <label for="nombre" class="form-label">Nombre:</label>
                <InputText type="text" class="form-control" id="nombre" name="nombre" @bind-value="Mensaje.Name" />
                <ValidationMessage For="@(() => Mensaje.Name)" />
            </div>

            <div class="mb-3">
                <label for="descripcion" class="form-label">Descripcion:</label>
                <InputTextArea class="form-control" id="descripcion" name="descripcion" rows="3" style="max-height:200px" @bind-value="Mensaje.Description" />
                <ValidationMessage For="@(() => Mensaje.Description)" />
            </div>
            <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-danger">Guardar Cambios</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Message Mensaje = new Message();

    protected override void OnInitialized()
    {
        // Simular la carga de datos
        Mensaje = ListarMensaje.Messages.FirstOrDefault(c => c.Id == Id);
    }

    private void Modificarmensaje()
    {
        Console.WriteLine($"Mensaje modificado: {Mensaje.Name} - {Mensaje.Description}");
        var M = ListarMensaje.Messages.FirstOrDefault(c => c.Id == Id);
        if (M != null)
        {
            M.MessageType = Mensaje.MessageType;
            M.Version = Mensaje.Version;
            M.Release = Mensaje.Release;
            M.Directory = Mensaje.Directory;
            M.DirectoryVersion = Mensaje.DirectoryVersion;
            M.Name = Mensaje.Name;
            M.Description = Mensaje.Description;

            Console.WriteLine($"Mensaje modificado: {M.Name} - {M.Description}");
        }
        else
        {
            Console.WriteLine($"No se encontró unmensaje  con el ID: {Id} para modificar.");
        }

        //Redirigir al listado de mensajes
        NavigationManager.NavigateTo("/listar-mensaje");
    }
}