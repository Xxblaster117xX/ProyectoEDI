@page "/visualizacionedi"
@inject NavigationManager NavigationManager
@using Entities.Entidades_Definicion
@rendermode InteractiveServer

<div class="container d-flex justify-content-center align-items-center" style="margin-top: 10%">
    <div class="card p-4" style="width: 40rem;">
        @if (mensaje != null)
        {
            <div>
                <h3 class="h3 align-self-center">Visualizar mensaje</h3>
                <p><strong>Nombre:</strong> @mensaje.MessageName</p>
                <p><strong>Tipo:</strong> @mensaje.MessageType.ToString()</p>
                <p><strong>Descripción:</strong> @mensaje.MessageDescription</p>
            </div>
            <button @onclick="ModificarMensaje" class="btn btn-danger">Modificar</button>
        }
        else
        {
            <p>Cargando...</p>
        }
    </div>
</div>

@code {
    public int id { get; set; }
    public Message mensaje { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Cargar el mensaje por ID
        mensaje = await ObtenerMensajePorId(id);
    }

    private void ModificarMensaje() => NavigationManager.NavigateTo($"/modificar-mensaje/{id}");

    private async Task<Message> ObtenerMensajePorId(int id)
    {
        await Task.Delay(500); // Simula un retraso
        return new Message
        {
            MessageType = Entities.Model.Enum.MessageTypeEnum.INVOIC,
            MessageName = "Factura Electrónica",
            MessageDescription = "Mensaje de prueba para una factura electrónica",
            MessagePositions = new List<MessagePosition>()
        };
    }
}