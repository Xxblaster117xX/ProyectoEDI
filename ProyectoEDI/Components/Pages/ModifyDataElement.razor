@page "/ModifyDataElement/{DataElementId:int}"
@using Entities.Entidades_Definicion
@inject NavigationManager Navigation
@inject DataElementManager dataElementManager
@rendermode InteractiveServer

<h3>Modificar Elemento de Dato</h3>

@if (dataElement == null)
{
    <p>Cargando elemento de dato...</p>
}
else
{
    <EditForm Model="dataElement" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="dataElementName" class="form-label fw-bold">Nombre</label>
            <InputText class="form-control" @bind-Value="dataElement.DataElementName" required />
        </div>
        <div class="form-group">
            <label for="dataElementDescription" class="form-label fw-bold">Descripción</label>
            <InputTextArea class="form-control" @bind-Value="dataElement.DataElementDescription" required />
        </div>
        <div class="form-group">
            <label for="dataElementValueFormat" class="form-label fw-bold">Formato de Valor</label>
            <InputText class="form-control" @bind-Value="dataElement.DataElementValueFormat" required />
        </div>
        <br />
        <button type="submit" class="btn btn-success" style="background-color:red">Guardar Cambios</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancelar</button>
    </EditForm>
}

@if (showSuccessPopup)
{
    <div class="overlay">
        <div class="popUpConfirmation">
            <h4>Modificación Exitosa</h4>
            <p>El elemento de dato se ha modificado correctamente. ¿Desea volver a la lista?</p>
            <div class="popup-buttons">
                <button class="btn btn-success" @onclick="GoToList">Sí</button>
                <button class="btn btn-secondary" @onclick="StayHere">No</button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int DataElementId { get; set; }
    private DataElement dataElement;
    private bool showSuccessPopup = false;

    /// <summary>
    /// Cargar el elemento de dato por su ID al inicializar la página.
    /// </summary>
    protected override void OnInitialized()
    {
        Console.WriteLine($"Cargando elemento de dato con ID {DataElementId}");
        dataElement = dataElementManager.GetDataElementByCode(DataElementId);
        if (dataElement == null)
        {
            Console.WriteLine($"No se encontró el elemento de dato con ID {DataElementId}");
        }
        else
        {
            Console.WriteLine($"Elemento de dato cargado: {dataElement.DataElementName}");
        }
    }

    /// <summary>
    /// Guardar los cambios realizados en el elemento de dato.
    /// </summary>
    private void HandleValidSubmit()
    {
        dataElementManager.UpdateDataElement(dataElement);
        showSuccessPopup = true;
    }

    /// <summary>
    /// Redirigir a la lista de elementos de dato.
    /// </summary>
    private void GoToList()
    {
        showSuccessPopup = false;
        Navigation.NavigateTo("/DataElementList?success=modified");
    }

    /// <summary>
    /// Permanecer en la página actual.
    /// </summary>
    private void StayHere()
    {
        showSuccessPopup = false;
    }

    /// <summary>
    /// Cancelar la edición y volver a la lista de elementos de dato.
    /// </summary>
    private void Cancel()
    {
        Navigation.NavigateTo("/DataElementList");
    }
}
